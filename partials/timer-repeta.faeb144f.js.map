{"mappings":"AASA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,UAAWH,SAASC,cAAc,cAiDpC,MAAMG,EAAQ,IA9Cd,MAQEC,OACE,MAAMC,EAAOC,KAAKC,kBAAkB,GACpCD,KAAKE,OAAOH,E,CAEdI,QACE,GAAIH,KAAKI,SACP,OAEF,MAAMC,EAAYC,KAAKC,MACvBP,KAAKI,UAAW,EAEhBJ,KAAKQ,WAAaC,aAAY,KAC5B,MACMC,EADcJ,KAAKC,MACOF,EAC1BN,EAAOC,KAAKC,kBAAkBS,GAEpCV,KAAKE,OAAOH,EAAK,GAChB,I,CAELY,OACEC,cAAcZ,KAAKQ,YACnBR,KAAKI,UAAW,EAChBJ,KAAKF,M,CAEPG,kBAAkBF,GAOhB,MAAO,C,MANOC,KAAKa,IACjBC,KAAKC,MAAMhB,EAAS,MAAyB,O,KAElCC,KAAKa,IAAIC,KAAKC,MAAMhB,EAAS,KAAoB,M,KACjDC,KAAKa,IAAIC,KAAKC,MAAMhB,EAAS,IAAc,M,CAI1Dc,IAAIG,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAzCnCC,aAAYjB,OAAEA,IACZF,KAAKQ,WAAa,KAClBR,KAAKI,UAAW,EAChBJ,KAAKE,OAASA,EAEdF,KAAKF,M,GAwCe,CACtBI,OAMF,UAAyBkB,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IACtC/B,EAAKK,UAAU2B,YAAc,GAAGH,KAASC,KAAQC,G,IAJnD/B,EAAKC,SAASgC,iBAAiB,QAAS3B,EAAMM,MAAMsB,KAAK5B,IACzDN,EAAKI,QAAQ6B,iBAAiB,QAAS3B,EAAMc,KAAKc,KAAK5B","sources":["src/js/timer-repeta.js"],"sourcesContent":["// const date = new Date();\n// const date1 = Date.now();\n\n// console.dir(date);\n// console.log(date.getTime());\n// console.log(date1);\n\n// !!!!!!! TIMER !!!!!!!!!!!\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  clockText: document.querySelector('.js-clock'),\n};\n\nclass Timer {\n  constructor({ onTick }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTick = onTick;\n\n    this.init();\n  }\n  init() {\n    const time = this.getTimeComponents(0);\n    this.onTick(time);\n  }\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const time = this.getTimeComponents(deltaTime);\n\n      this.onTick(time);\n    }, 1000);\n  }\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n    this.init();\n  }\n  getTimeComponents(time) {\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { hours, mins, secs };\n  }\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new Timer({\n  onTick: updateClockText,\n});\n\nrefs.startBtn.addEventListener('click', timer.start.bind(timer));\nrefs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\nfunction updateClockText({ hours, mins, secs }) {\n  refs.clockText.textContent = `${hours}:${mins}:${secs}`;\n}\n"],"names":["$cc1f0e710834e731$var$refs","startBtn","document","querySelector","stopBtn","clockText","$cc1f0e710834e731$var$timer","init","time","this","getTimeComponents","onTick","start","isActive","startTime","Date","now","intervalId","setInterval","deltaTime","stop","clearInterval","pad","Math","floor","value","String","padStart","constructor","hours","mins","secs","textContent","addEventListener","bind"],"version":3,"file":"timer-repeta.faeb144f.js.map"}